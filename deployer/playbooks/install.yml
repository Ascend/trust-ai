- name: check haveged status
  shell: systemctl is-active haveged
  register: haveged_status
  changed_when: false
  failed_when: false
  ignore_errors: yes
  when: ansible_connection != "local" or (ansible_connection == "local" and all == "y")

- name: yum install haveged
  shell: rpm -ivh --force --nodeps --replacepkgs {{ resources_dir }}/rpm_{{ ansible_architecture }}/*.rpm
  register: sys_result
  when:
    - ansible_pkg_mgr == "yum" or ansible_pkg_mgr == "dnf" or ansible_pkg_mgr == "zypper"
    - ansible_connection != "local" or (ansible_connection == "local" and all == "y")
    - haveged_status.stdout is defined and haveged_status.stdout != "active"

- name: message
  debug: var=sys_result
  when:
    - sys_result.changed
    - ansible_connection != "local" or (ansible_connection == "local" and all == "y")
    - haveged_status.stdout is defined and haveged_status.stdout != "active"

- name: apt install haveged
  shell: export DEBIAN_FRONTEND=noninteractive && export DEBIAN_PRIORITY=critical; dpkg --force-all -i {{ resources_dir }}/dpkg_{{ ansible_architecture }}/*.deb
  register: sys_result
  when:
    - ansible_pkg_mgr == "apt"
    - ansible_connection != "local" or (ansible_connection == "local" and all == "y")
    - haveged_status.stdout is defined and haveged_status.stdout != "active"

- name: message
  debug: var=sys_result
  when:
    - sys_result.changed
    - ansible_connection != "local" or (ansible_connection == "local" and all == "y")
    - haveged_status.stdout is defined and haveged_status.stdout != "active"

- name: enable haveged
  shell: systemctl enable haveged
  when:
    - ansible_connection != "local" or (ansible_connection == "local" and all == "y")
    - haveged_status.stdout is defined and haveged_status.stdout != "active"

- name: start haveged
  shell: systemctl start haveged
  when:
    - ansible_connection != "local" or (ansible_connection == "local" and all == "y")
    - haveged_status.stdout is defined and haveged_status.stdout != "active"

- name: check haveged status again
  shell: systemctl is-active haveged
  register: haveged_again_status
  when: ansible_connection != "local" or (ansible_connection == "local" and all == "y")

- name: message
  debug:
    msg:
      - "haveged status is {{ haveged_again_status.stdout }}"
  when: ansible_connection != "local" or (ansible_connection == "local" and all == "y")

- name: find docker command
  shell: command -v docker | wc -l
  register: docker_exists
  when: ansible_connection != "local" or (ansible_connection == "local" and all == "y")

- name: message
  fail:
    msg: "Please install docker first"
  when: docker_exists.stdout is defined and docker_exists.stdout == '0'

- name: Check docker status
  shell: systemctl is-active docker
  register: docker_status
  changed_when: false
  failed_when: false
  ignore_errors: yes
  when: ansible_connection != "local" or (ansible_connection == "local" and all == "y")

- name: restart docker
  shell: systemctl daemon-reload && systemctl restart docker
  when:
    - docker_status.stdout is defined and docker_status.stdout != "active"
    - ansible_connection != "local" or (ansible_connection == "local" and all == "y")

- name: Check docker status again
  shell: systemctl is-active docker
  register: docker_status_again
  changed_when: false
  failed_when: false
  ignore_errors: yes
  when: ansible_connection != "local" or (ansible_connection == "local" and all == "y")

- name: message
  debug:
    msg:
      - "docker status is {{ docker_status_again.stdout }}"
  when: ansible_connection != "local" or (ansible_connection == "local" and all == "y")

- name: find aivault image
  stat:
    dest: "{{ resources_dir }}/aivault_{{ ansible_architecture }}.tar"
  register: aivault_image
  when:
    - server is defined
    - ansible_connection != "local" or (ansible_connection == "local" and all == "y")

- name: docker load aivault image
  shell: docker load < {{ resources_dir }}/aivault_{{ ansible_architecture }}.tar
  register: load_result
  when:
    - server is defined and aivault_image.stat.exists
    - ansible_connection != "local" or (ansible_connection == "local" and all == "y")

- name: message
  debug:
    msg:
      - "can not find aivault_{{ ansible_architecture }}.tar, load image failed"
  failed_when: true
  when:
    - server is defined and not aivault_image.stat.exists
    - ansible_connection != "local" or (ansible_connection == "local" and all == "y")

- name: start the ai-vault service
  shell: |
    mkdir -p {{ resources_dir }}/AiVault/.ai-vault
    cp -f {{ resources_dir }}/cert/* {{ resources_dir }}/AiVault/.ai-vault
    cp -f {{ resources_dir }}/install.sh {{ resources_dir }}/AiVault/
    bash {{ resources_dir }}/AiVault/install.sh {{ passin }}
  when: server is defined and load_result.rc == 0
  

- name: find fuse-plugin
  stat:
    dest: "{{ resources_dir }}/fuse_{{ ansible_architecture }}/aiguard_plugin/install.sh"
  register: fuse_plugin
  when:
    - server is undefined
    - ansible_connection != "local" or (ansible_connection == "local" and all == "y")

- name: install fuse-plugin
  shell: bash {{ resources_dir }}/fuse_{{ ansible_architecture }}/aiguard_plugin/install.sh
  when:
    - server is undefined and fuse_plugin.stat is defined and fuse_plugin.stat.exists
    - ansible_connection != "local" or (ansible_connection == "local" and all == "y")

- name: message
  debug:
    msg:
      - "can not find fuse-plugin package, fuse-plugin install skipped"
  when:
    - server is undefined and fuse_plugin.stat is defined and not fuse_plugin.stat.exists
    - ansible_connection != "local" or (ansible_connection == "local" and all == "y")

- name: Check fuse-plugin status
  shell: ps -ef | grep aiguard-plugin | grep -v "grep" | wc -l
  register: fuse_plugin_status
  when:
    - server is undefined
    - ansible_connection != "local" or (ansible_connection == "local" and all == "y")

- name: message
  debug:
    msg:
      - "fuse-plugin run successfully"
  when:
    - server is undefined and fuse_plugin_status.stdout is defined and fuse_plugin_status.stdout != '0'
    - ansible_connection != "local" or (ansible_connection == "local" and all == "y")

- name: message
  debug:
    msg:
      - "fuse-plugin run failed"
  when:
    - server is undefined and fuse_plugin_status.stdout is defined and fuse_plugin_status.stdout == '0'
    - ansible_connection != "local" or (ansible_connection == "local" and all == "y")
    - fuse_plugin.stat is defined and fuse_plugin.stat.exists