- hosts: localhost
  vars:
    host_count: "{{ groups[hosts_name] | length }}"
    first_host: "{{ groups[hosts_name][0] }}"
  tasks:
    - name: check aivault server
      shell: grep -c server {{ inventory_file }}
      register: aivault_check_result
      changed_when: false
      failed_when: aivault_check_result.rc > 1
      when: not (host_count == "1" and first_host == "localhost")
      
    - name: make tar package for remote
      shell: tar -zcf ~/resources.tar --exclude=../resources/*.tar ../resources
      when: not (host_count == "1" and first_host == "localhost")
    
    - name: make tar package for aivault server
      shell: tar -zcf ~/aivault.tar ../resources/*.tar
      when:
        - not (host_count == "1" and first_host == "localhost")
        - aivault_check_result.stdout == "1"
        - ansible_connection == "local" and server is undefined
- hosts: '{{ hosts_name }}'
  tasks:
    - name: check when set server
      debug:
        msg:
          - "when set server, server must be set to aivault"
      failed_when: true
      when: server is defined and server != 'aivault'

    - name: clean remote resources
      file:
        state: absent
        path: ~/resources
      when: ansible_connection != "local"
    
    - name: clean remote resources.tar
      file:
        state: absent
        path: ~/resources.tar
      when: ansible_connection != "local"

    - name: copy to remote hosts
      copy:
        src: ~/resources.tar
        dest: ~/
      when: ansible_connection != "local"

    - name: uncompress on remote
      unarchive:
        src: ~/resources.tar
        dest: ~/
        copy: no
      when: ansible_connection != "local"
    
    - name: copy aivault image to aivault host
      copy:
        src: ~/aivault.tar
        dest: ~/
      when: server is defined and ansible_connection != "local"
    
    - name: uncompress on aivault server
      unarchive:
        src: ~/aivault.tar
        dest: ~/
        copy: no
      when: server is defined and ansible_connection != "local"
